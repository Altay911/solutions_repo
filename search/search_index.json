{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Introduction Technical setup Install Visual Studio Code from here Install folowing extensions in Visual Studio Code: Github Repositories (GitHub, Inc.) GitHub Copilot (GitHub Copilot) GitHub Actions (GitHub, Inc.) Python (Microsoft) Useful links Python Miniconda Documentation Google Colab How to use this repository Below are the steps you need to follow: Create a GitHub account if you don\u2019t have one. Fork this repository to your account. Enable the Issues tab: Go to the Settings tab and check the Issues option. Add your professor as a collaborator: Go to the Settings tab and add their GitHub username in the Collaborators section. Install python: Download Source Code & WWW GitHub repo WWW Where can I find the problems? Please visit the Mathematics Physics Lectures website. Physics Mathematics Discret Mathematics","title":"Introduction"},{"location":"#introduction","text":"","title":"Introduction"},{"location":"#technical-setup","text":"Install Visual Studio Code from here Install folowing extensions in Visual Studio Code: Github Repositories (GitHub, Inc.) GitHub Copilot (GitHub Copilot) GitHub Actions (GitHub, Inc.) Python (Microsoft)","title":"Technical setup"},{"location":"#useful-links","text":"Python Miniconda Documentation Google Colab","title":"Useful links"},{"location":"#how-to-use-this-repository","text":"Below are the steps you need to follow: Create a GitHub account if you don\u2019t have one. Fork this repository to your account. Enable the Issues tab: Go to the Settings tab and check the Issues option. Add your professor as a collaborator: Go to the Settings tab and add their GitHub username in the Collaborators section. Install python: Download Source Code & WWW GitHub repo WWW","title":"How to use this repository"},{"location":"#where-can-i-find-the-problems","text":"Please visit the Mathematics Physics Lectures website. Physics Mathematics Discret Mathematics","title":"Where can I find the problems?"},{"location":"1%20Physics/1%20Mechanics/Problem_1/","text":"PROBLEM 1 Motivation Investigating the Range as a Function of the Angle of Projection Projectile motion, while seemingly simple, offers a rich playground for exploring fundamental principles of physics. The basic idea is straightforward: analyze how the range of a projectile depends on its angle of projection . Yet, beneath this simplicity lies a complex and versatile framework. What makes this topic compelling is the number of free parameters involved\u2014such as initial velocity , gravitational acceleration , and launch height . These parameters allow for a diverse set of solutions that describe phenomena ranging from the arc of a soccer ball to the trajectory of a rocket. 1. Theoretical Foundation We start with the fundamental equations of motion under constant acceleration due to gravity, assuming no air resistance. Equations of Motion Let: - \\( v_0 \\) : Initial velocity - \\( \\theta \\) : Angle of projection - \\( g \\) : Acceleration due to gravity (typically \\( 9.81 \\, \\text{m/s}^2 \\) ) - \\( R \\) : Horizontal range Decomposing the motion: Horizontal component: [ v_{x} = v_0 \\cos(\\theta) ] Vertical component: [ v_{y} = v_0 \\sin(\\theta) ] Time of flight \\( T \\) (for level ground): \\[ T = \\frac{2 v_0 \\sin(\\theta)}{g} \\] Range is then: \\[ R(\\theta) = v_{x} \\cdot T = \\frac{v_0^2 \\sin(2\\theta)}{g} \\] 2. Analysis of the Range Effect of Angle on Range The range is maximized when \\( \\sin(2\\theta) \\) is maximized. Max value of \\( \\sin(2\\theta) \\) is 1 when \\( 2\\theta = 90^\\circ \\) \u2192 \\( \\theta = 45^\\circ \\) Effect of Initial Velocity Range increases quadratically with \\( v_0 \\) : [ R \\propto v_0^2 ] Effect of Gravitational Acceleration Range is inversely proportional to \\( g \\) : [ R \\propto \\frac{1}{g} ] 3. Practical Applications Real-world projectile motion often includes: Uneven terrain (non-zero launch and landing height) Air resistance (drag) Wind or spin (Magnus effect) To account for these, we would need to: Modify the equations to include drag force proportional to velocity. Adjust for initial and final height differences . Use numerical methods to solve non-linear equations. 4. Implementation (Python Simulation) Below is a Python script to visualize how the range varies with the angle of projection , for different initial velocities. ```python import numpy as np import matplotlib.pyplot as plt Constants g = 9.81 # gravitational acceleration (m/s^2) angles = np.linspace(0, 90, 100) # degrees radians = np.radians(angles) Initial velocities to compare initial_velocities = [10, 20, 30] plt.figure(figsize=(10, 6)) for v0 in initial_velocities: range_vals = (v0**2 * np.sin(2 * radians)) / g plt.plot(angles, range_vals, label=f'v\u2080 = {v0} m/s') plt.title(\"Range vs Angle of Projection\") plt.xlabel(\"Angle (degrees)\") plt.ylabel(\"Range (meters)\") plt.legend() plt.grid(True) plt.show() FINAL","title":"PROBLEM 1"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#problem-1","text":"","title":"PROBLEM 1"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#motivation-investigating-the-range-as-a-function-of-the-angle-of-projection","text":"Projectile motion, while seemingly simple, offers a rich playground for exploring fundamental principles of physics. The basic idea is straightforward: analyze how the range of a projectile depends on its angle of projection . Yet, beneath this simplicity lies a complex and versatile framework. What makes this topic compelling is the number of free parameters involved\u2014such as initial velocity , gravitational acceleration , and launch height . These parameters allow for a diverse set of solutions that describe phenomena ranging from the arc of a soccer ball to the trajectory of a rocket.","title":"Motivation Investigating the Range as a Function of the Angle of Projection"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#1-theoretical-foundation","text":"We start with the fundamental equations of motion under constant acceleration due to gravity, assuming no air resistance.","title":"1. Theoretical Foundation"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#equations-of-motion","text":"Let: - \\( v_0 \\) : Initial velocity - \\( \\theta \\) : Angle of projection - \\( g \\) : Acceleration due to gravity (typically \\( 9.81 \\, \\text{m/s}^2 \\) ) - \\( R \\) : Horizontal range Decomposing the motion: Horizontal component: [ v_{x} = v_0 \\cos(\\theta) ] Vertical component: [ v_{y} = v_0 \\sin(\\theta) ] Time of flight \\( T \\) (for level ground): \\[ T = \\frac{2 v_0 \\sin(\\theta)}{g} \\] Range is then: \\[ R(\\theta) = v_{x} \\cdot T = \\frac{v_0^2 \\sin(2\\theta)}{g} \\]","title":"Equations of Motion"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#2-analysis-of-the-range","text":"","title":"2. Analysis of the Range"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#effect-of-angle-on-range","text":"The range is maximized when \\( \\sin(2\\theta) \\) is maximized. Max value of \\( \\sin(2\\theta) \\) is 1 when \\( 2\\theta = 90^\\circ \\) \u2192 \\( \\theta = 45^\\circ \\)","title":"Effect of Angle on Range"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#effect-of-initial-velocity","text":"Range increases quadratically with \\( v_0 \\) : [ R \\propto v_0^2 ]","title":"Effect of Initial Velocity"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#effect-of-gravitational-acceleration","text":"Range is inversely proportional to \\( g \\) : [ R \\propto \\frac{1}{g} ]","title":"Effect of Gravitational Acceleration"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#3-practical-applications","text":"Real-world projectile motion often includes: Uneven terrain (non-zero launch and landing height) Air resistance (drag) Wind or spin (Magnus effect) To account for these, we would need to: Modify the equations to include drag force proportional to velocity. Adjust for initial and final height differences . Use numerical methods to solve non-linear equations.","title":"3. Practical Applications"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#4-implementation-python-simulation","text":"Below is a Python script to visualize how the range varies with the angle of projection , for different initial velocities. ```python import numpy as np import matplotlib.pyplot as plt","title":"4. Implementation (Python Simulation)"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#constants","text":"g = 9.81 # gravitational acceleration (m/s^2) angles = np.linspace(0, 90, 100) # degrees radians = np.radians(angles)","title":"Constants"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#initial-velocities-to-compare","text":"initial_velocities = [10, 20, 30] plt.figure(figsize=(10, 6)) for v0 in initial_velocities: range_vals = (v0**2 * np.sin(2 * radians)) / g plt.plot(angles, range_vals, label=f'v\u2080 = {v0} m/s') plt.title(\"Range vs Angle of Projection\") plt.xlabel(\"Angle (degrees)\") plt.ylabel(\"Range (meters)\") plt.legend() plt.grid(True) plt.show() FINAL","title":"Initial velocities to compare"},{"location":"1%20Physics/1%20Mechanics/Problem_2/","text":"Investigating the Dynamics of a Forced Damped Pendulum Motivation The forced damped pendulum is a beautiful mess of physics \u2014 simple at first glance, but wildly complex when you start adding damping and driving forces. Instead of a clean swing back and forth, you get a whole zoo of behavior: resonance, chaos, and quasi-periodic motion. This system is a textbook example of how nonlinear dynamics emerge in real-world systems: from bridges vibrating in wind to circuits oscillating in sync with a signal. By tweaking a few knobs \u2014 like the damping factor, the amplitude of the driving force, or its frequency \u2014 the pendulum flips between elegant order and total chaos. 1. Theoretical Foundation Governing Equation The motion of a forced damped pendulum is described by the nonlinear second-order differential equation: \\[ \\frac{d^2\\theta}{dt^2} + \\gamma \\frac{d\\theta}{dt} + \\omega_0^2 \\sin(\\theta) = A \\cos(\\omega t) \\] Where: \\( \\theta(t) \\) : angular displacement \\( \\gamma \\) : damping coefficient \\( \\omega_0 \\) : natural frequency of the pendulum \\( (\\omega_0 = \\sqrt{\\frac{g}{L}}) \\) \\( A \\) : amplitude of the driving force \\( \\omega \\) : angular frequency of the driving force Small-Angle Approximation For \\( \\theta \\ll 1 \\) , we can approximate: \\[ \\sin(\\theta) \\approx \\theta \\] This linearizes the equation: \\[ \\frac{d^2\\theta}{dt^2} + \\gamma \\frac{d\\theta}{dt} + \\omega_0^2 \\theta = A \\cos(\\omega t) \\] Resonance Resonance occurs when the driving frequency \\( \\omega \\) approaches the natural frequency \\( \\omega_0 \\) . Under resonance, the amplitude of oscillation grows (limited only by damping). 2. Analysis of Dynamics The behavior of the pendulum drastically changes with variations in: Damping \\( \\gamma \\) : High damping smooths everything out; low damping allows buildup of energy. Driving Amplitude \\( A \\) : Stronger forcing leads to nonlinear and chaotic effects. Driving Frequency \\( \\omega \\) : Dictates whether the system hits resonance or not. Chaos & Quasiperiodicity When: - Damping is moderate - Forcing is strong - Frequency is near resonance ...the pendulum can enter chaotic regimes , where tiny differences in initial conditions lead to wildly different outcomes. 3. Practical Applications The forced damped pendulum isn\u2019t just a classroom toy. It pops up in: Energy harvesting (piezoelectric oscillators) Suspension bridges (wind-induced vibrations) AC circuits (driven RLC circuits) Biomechanics (human walking modeled as forced oscillations) 4. Implementation (Python Simulation) Basic Simulation of the Forced Damped Pendulum ```python import numpy as np import matplotlib.pyplot as plt from scipy.integrate import solve_ivp Parameters gamma = 0.5 # Damping coefficient omega0 = 1.5 # Natural frequency A = 1.2 # Driving force amplitude omega_drive = 2/3 # Driving frequency t_max = 100 # Duration dt = 0.01 # Time step Differential equation def pendulum(t, y): theta, omega = y dtheta_dt = omega domega_dt = -gamma * omega - omega0**2 * np.sin(theta) + A * np.cos(omega_drive * t) return [dtheta_dt, domega_dt] Initial conditions y0 = [0.2, 0.0] # [theta, omega] t_eval = np.arange(0, t_max, dt) Solve sol = solve_ivp(pendulum, [0, t_max], y0, t_eval=t_eval, method='RK45') Plot angular displacement plt.figure(figsize=(10, 5)) plt.plot(sol.t, sol.y[0], label='\u03b8(t)') plt.title(\"Forced Damped Pendulum Motion\") plt.xlabel(\"Time (s)\") plt.ylabel(\"Angular Displacement (rad)\") plt.grid(True) plt.legend() plt.show() FINAL","title":"Investigating the Dynamics of a Forced Damped Pendulum"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#investigating-the-dynamics-of-a-forced-damped-pendulum","text":"","title":"Investigating the Dynamics of a Forced Damped Pendulum"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#motivation","text":"The forced damped pendulum is a beautiful mess of physics \u2014 simple at first glance, but wildly complex when you start adding damping and driving forces. Instead of a clean swing back and forth, you get a whole zoo of behavior: resonance, chaos, and quasi-periodic motion. This system is a textbook example of how nonlinear dynamics emerge in real-world systems: from bridges vibrating in wind to circuits oscillating in sync with a signal. By tweaking a few knobs \u2014 like the damping factor, the amplitude of the driving force, or its frequency \u2014 the pendulum flips between elegant order and total chaos.","title":"Motivation"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#1-theoretical-foundation","text":"","title":"1. Theoretical Foundation"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#governing-equation","text":"The motion of a forced damped pendulum is described by the nonlinear second-order differential equation: \\[ \\frac{d^2\\theta}{dt^2} + \\gamma \\frac{d\\theta}{dt} + \\omega_0^2 \\sin(\\theta) = A \\cos(\\omega t) \\] Where: \\( \\theta(t) \\) : angular displacement \\( \\gamma \\) : damping coefficient \\( \\omega_0 \\) : natural frequency of the pendulum \\( (\\omega_0 = \\sqrt{\\frac{g}{L}}) \\) \\( A \\) : amplitude of the driving force \\( \\omega \\) : angular frequency of the driving force","title":"Governing Equation"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#small-angle-approximation","text":"For \\( \\theta \\ll 1 \\) , we can approximate: \\[ \\sin(\\theta) \\approx \\theta \\] This linearizes the equation: \\[ \\frac{d^2\\theta}{dt^2} + \\gamma \\frac{d\\theta}{dt} + \\omega_0^2 \\theta = A \\cos(\\omega t) \\]","title":"Small-Angle Approximation"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#resonance","text":"Resonance occurs when the driving frequency \\( \\omega \\) approaches the natural frequency \\( \\omega_0 \\) . Under resonance, the amplitude of oscillation grows (limited only by damping).","title":"Resonance"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#2-analysis-of-dynamics","text":"The behavior of the pendulum drastically changes with variations in: Damping \\( \\gamma \\) : High damping smooths everything out; low damping allows buildup of energy. Driving Amplitude \\( A \\) : Stronger forcing leads to nonlinear and chaotic effects. Driving Frequency \\( \\omega \\) : Dictates whether the system hits resonance or not.","title":"2. Analysis of Dynamics"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#chaos-quasiperiodicity","text":"When: - Damping is moderate - Forcing is strong - Frequency is near resonance ...the pendulum can enter chaotic regimes , where tiny differences in initial conditions lead to wildly different outcomes.","title":"Chaos &amp; Quasiperiodicity"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#3-practical-applications","text":"The forced damped pendulum isn\u2019t just a classroom toy. It pops up in: Energy harvesting (piezoelectric oscillators) Suspension bridges (wind-induced vibrations) AC circuits (driven RLC circuits) Biomechanics (human walking modeled as forced oscillations)","title":"3. Practical Applications"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#4-implementation-python-simulation","text":"","title":"4. Implementation (Python Simulation)"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#basic-simulation-of-the-forced-damped-pendulum","text":"```python import numpy as np import matplotlib.pyplot as plt from scipy.integrate import solve_ivp","title":"Basic Simulation of the Forced Damped Pendulum"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#parameters","text":"gamma = 0.5 # Damping coefficient omega0 = 1.5 # Natural frequency A = 1.2 # Driving force amplitude omega_drive = 2/3 # Driving frequency t_max = 100 # Duration dt = 0.01 # Time step","title":"Parameters"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#differential-equation","text":"def pendulum(t, y): theta, omega = y dtheta_dt = omega domega_dt = -gamma * omega - omega0**2 * np.sin(theta) + A * np.cos(omega_drive * t) return [dtheta_dt, domega_dt]","title":"Differential equation"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#initial-conditions","text":"y0 = [0.2, 0.0] # [theta, omega] t_eval = np.arange(0, t_max, dt)","title":"Initial conditions"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#solve","text":"sol = solve_ivp(pendulum, [0, t_max], y0, t_eval=t_eval, method='RK45')","title":"Solve"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#plot-angular-displacement","text":"plt.figure(figsize=(10, 5)) plt.plot(sol.t, sol.y[0], label='\u03b8(t)') plt.title(\"Forced Damped Pendulum Motion\") plt.xlabel(\"Time (s)\") plt.ylabel(\"Angular Displacement (rad)\") plt.grid(True) plt.legend() plt.show() FINAL","title":"Plot angular displacement"},{"location":"1%20Physics/2%20Gravity/Problem_1/","text":"Problem 1 Orbital Period and Orbital Radius Motivation Kepler's Third Law of planetary motion relates the square of the orbital period of a planet to the cube of its orbital radius . This fundamental law allows us to calculate planetary motions and offers insights into the gravitational interactions governing the motion of celestial bodies. By analyzing this relationship, we can explore various phenomena, from satellite orbits to the structure of entire planetary systems. 1. Theoretical Foundation Deriving Kepler\u2019s Third Law for Circular Orbits We begin with the gravitational force that provides the centripetal force required for circular motion. According to Newton\u2019s Law of Gravitation: \\[ F_{\\text{gravity}} = \\frac{G M m}{r^2} \\] Where: - \\( G \\) is the gravitational constant ( \\(6.674 \\times 10^{-11} \\, \\text{m}^3 \\, \\text{kg}^{-1} \\, \\text{s}^{-2}\\) ) - \\( M \\) is the mass of the central body (e.g., Sun, Earth) - \\( m \\) is the mass of the orbiting body (e.g., a planet, satellite) - \\( r \\) is the orbital radius (distance from the center of the central body) For circular motion, the centripetal force is given by: \\[ F_{\\text{centripetal}} = \\frac{m v^2}{r} \\] Where: - \\( v \\) is the orbital velocity of the satellite or planet. Setting the gravitational force equal to the centripetal force: \\[ \\frac{G M m}{r^2} = \\frac{m v^2}{r} \\] Solving for \\( v \\) , the orbital velocity: \\[ v = \\sqrt{\\frac{G M}{r}} \\] Now, the orbital period \\( T \\) is the time it takes for the planet or satellite to complete one revolution. The distance traveled in one orbit is the circumference of the circle \\( 2\\pi r \\) , so the period is: \\[ T = \\frac{\\text{circumference}}{\\text{velocity}} = \\frac{2\\pi r}{v} \\] Substituting \\( v \\) from earlier: \\[ T = 2\\pi \\sqrt{\\frac{r^3}{G M}} \\] Squaring both sides gives us the relationship: \\[ T^2 = \\frac{4\\pi^2 r^3}{G M} \\] This is Kepler\u2019s Third Law , which states that the square of the orbital period \\( T^2 \\) is proportional to the cube of the orbital radius \\( r^3 \\) . This law is essential for understanding the motion of planets, satellites, and other celestial objects. 2. Implications for Astronomy Calculating Planetary Masses and Distances Kepler's Third Law is incredibly useful for determining the mass of a central body (such as the Sun or Earth) when the orbital period and radius are known. For example, by observing the Moon\u2019s orbital period and radius, we can estimate the mass of the Earth. Similarly, by studying the orbits of distant exoplanets, astronomers can infer the mass of the stars they orbit. Example: The Moon\u2019s Orbit The Moon orbits Earth with an orbital radius of approximately \\( 3.84 \\times 10^8 \\) meters and an orbital period of about 27.3 days. Using Kepler\u2019s Third Law, we can estimate the mass of the Earth if the orbital data of the Moon is known. 3. Real-World Examples Planets in the Solar System In the Solar System, all planets follow an orbital path around the Sun. By using Kepler\u2019s Third Law, we can compare the orbital periods and radii of planets to calculate their relative distances from the Sun. For instance: - Earth has an orbital period of 365.25 days and an orbital radius of 1 AU (astronomical unit). - Jupiter, with a much longer orbital period of about 11.86 Earth years, orbits the Sun at a much greater distance, roughly 5.2 AU. Satellites and Artificial Orbits In modern times, satellites orbiting Earth also obey Kepler's Third Law. Understanding this law helps in the design of satellite orbits for communication, GPS systems, and space stations. 4. Implementation (Python Simulation) Below is a Python script that simulates a circular orbit and verifies Kepler\u2019s Third Law. The program calculates the orbital period based on different orbital radii for a given central mass (e.g., mass of Earth). ```python import numpy as np import matplotlib.pyplot as plt Constants G = 6.674 * 10 -11 # Gravitational constant (m^3 kg^-1 s^-2) M = 5.972 * 10 24 # Mass of Earth (kg) Orbital radii (in meters) radii = np.linspace(1e7, 1e9, 100) Orbital period (T) based on Kepler's third law: T^2 = (4\u03c0^2 r^3) / (GM) periods = 2 * np.pi * np.sqrt(radii**3 / (G * M)) Plotting the relationship between T^2 and r^3 plt.figure(figsize=(8, 6)) plt.plot(radii 3, periods 2, label=\"T^2 vs r^3\") plt.xlabel(\"r^3 (m^3)\") plt.ylabel(\"T^2 (s^2)\") plt.title(\"Kepler's Third Law: T^2 vs r^3\") plt.grid(True) plt.legend() plt.show()","title":"Problem 1"},{"location":"1%20Physics/2%20Gravity/Problem_1/#problem-1","text":"","title":"Problem 1"},{"location":"1%20Physics/2%20Gravity/Problem_1/#orbital-period-and-orbital-radius","text":"","title":"Orbital Period and Orbital Radius"},{"location":"1%20Physics/2%20Gravity/Problem_1/#motivation","text":"Kepler's Third Law of planetary motion relates the square of the orbital period of a planet to the cube of its orbital radius . This fundamental law allows us to calculate planetary motions and offers insights into the gravitational interactions governing the motion of celestial bodies. By analyzing this relationship, we can explore various phenomena, from satellite orbits to the structure of entire planetary systems.","title":"Motivation"},{"location":"1%20Physics/2%20Gravity/Problem_1/#1-theoretical-foundation","text":"","title":"1. Theoretical Foundation"},{"location":"1%20Physics/2%20Gravity/Problem_1/#deriving-keplers-third-law-for-circular-orbits","text":"We begin with the gravitational force that provides the centripetal force required for circular motion. According to Newton\u2019s Law of Gravitation: \\[ F_{\\text{gravity}} = \\frac{G M m}{r^2} \\] Where: - \\( G \\) is the gravitational constant ( \\(6.674 \\times 10^{-11} \\, \\text{m}^3 \\, \\text{kg}^{-1} \\, \\text{s}^{-2}\\) ) - \\( M \\) is the mass of the central body (e.g., Sun, Earth) - \\( m \\) is the mass of the orbiting body (e.g., a planet, satellite) - \\( r \\) is the orbital radius (distance from the center of the central body) For circular motion, the centripetal force is given by: \\[ F_{\\text{centripetal}} = \\frac{m v^2}{r} \\] Where: - \\( v \\) is the orbital velocity of the satellite or planet. Setting the gravitational force equal to the centripetal force: \\[ \\frac{G M m}{r^2} = \\frac{m v^2}{r} \\] Solving for \\( v \\) , the orbital velocity: \\[ v = \\sqrt{\\frac{G M}{r}} \\] Now, the orbital period \\( T \\) is the time it takes for the planet or satellite to complete one revolution. The distance traveled in one orbit is the circumference of the circle \\( 2\\pi r \\) , so the period is: \\[ T = \\frac{\\text{circumference}}{\\text{velocity}} = \\frac{2\\pi r}{v} \\] Substituting \\( v \\) from earlier: \\[ T = 2\\pi \\sqrt{\\frac{r^3}{G M}} \\] Squaring both sides gives us the relationship: \\[ T^2 = \\frac{4\\pi^2 r^3}{G M} \\] This is Kepler\u2019s Third Law , which states that the square of the orbital period \\( T^2 \\) is proportional to the cube of the orbital radius \\( r^3 \\) . This law is essential for understanding the motion of planets, satellites, and other celestial objects.","title":"Deriving Kepler\u2019s Third Law for Circular Orbits"},{"location":"1%20Physics/2%20Gravity/Problem_1/#2-implications-for-astronomy","text":"","title":"2. Implications for Astronomy"},{"location":"1%20Physics/2%20Gravity/Problem_1/#calculating-planetary-masses-and-distances","text":"Kepler's Third Law is incredibly useful for determining the mass of a central body (such as the Sun or Earth) when the orbital period and radius are known. For example, by observing the Moon\u2019s orbital period and radius, we can estimate the mass of the Earth. Similarly, by studying the orbits of distant exoplanets, astronomers can infer the mass of the stars they orbit.","title":"Calculating Planetary Masses and Distances"},{"location":"1%20Physics/2%20Gravity/Problem_1/#example-the-moons-orbit","text":"The Moon orbits Earth with an orbital radius of approximately \\( 3.84 \\times 10^8 \\) meters and an orbital period of about 27.3 days. Using Kepler\u2019s Third Law, we can estimate the mass of the Earth if the orbital data of the Moon is known.","title":"Example: The Moon\u2019s Orbit"},{"location":"1%20Physics/2%20Gravity/Problem_1/#3-real-world-examples","text":"","title":"3. Real-World Examples"},{"location":"1%20Physics/2%20Gravity/Problem_1/#planets-in-the-solar-system","text":"In the Solar System, all planets follow an orbital path around the Sun. By using Kepler\u2019s Third Law, we can compare the orbital periods and radii of planets to calculate their relative distances from the Sun. For instance: - Earth has an orbital period of 365.25 days and an orbital radius of 1 AU (astronomical unit). - Jupiter, with a much longer orbital period of about 11.86 Earth years, orbits the Sun at a much greater distance, roughly 5.2 AU.","title":"Planets in the Solar System"},{"location":"1%20Physics/2%20Gravity/Problem_1/#satellites-and-artificial-orbits","text":"In modern times, satellites orbiting Earth also obey Kepler's Third Law. Understanding this law helps in the design of satellite orbits for communication, GPS systems, and space stations.","title":"Satellites and Artificial Orbits"},{"location":"1%20Physics/2%20Gravity/Problem_1/#4-implementation-python-simulation","text":"Below is a Python script that simulates a circular orbit and verifies Kepler\u2019s Third Law. The program calculates the orbital period based on different orbital radii for a given central mass (e.g., mass of Earth). ```python import numpy as np import matplotlib.pyplot as plt","title":"4. Implementation (Python Simulation)"},{"location":"1%20Physics/2%20Gravity/Problem_1/#constants","text":"G = 6.674 * 10 -11 # Gravitational constant (m^3 kg^-1 s^-2) M = 5.972 * 10 24 # Mass of Earth (kg)","title":"Constants"},{"location":"1%20Physics/2%20Gravity/Problem_1/#orbital-radii-in-meters","text":"radii = np.linspace(1e7, 1e9, 100)","title":"Orbital radii (in meters)"},{"location":"1%20Physics/2%20Gravity/Problem_1/#orbital-period-t-based-on-keplers-third-law-t2-42-r3-gm","text":"periods = 2 * np.pi * np.sqrt(radii**3 / (G * M))","title":"Orbital period (T) based on Kepler's third law: T^2 = (4\u03c0^2 r^3) / (GM)"},{"location":"1%20Physics/2%20Gravity/Problem_1/#plotting-the-relationship-between-t2-and-r3","text":"plt.figure(figsize=(8, 6)) plt.plot(radii 3, periods 2, label=\"T^2 vs r^3\") plt.xlabel(\"r^3 (m^3)\") plt.ylabel(\"T^2 (s^2)\") plt.title(\"Kepler's Third Law: T^2 vs r^3\") plt.grid(True) plt.legend() plt.show()","title":"Plotting the relationship between T^2 and r^3"},{"location":"1%20Physics/2%20Gravity/Problem_2/","text":"Problem 2","title":"Problem 2"},{"location":"1%20Physics/2%20Gravity/Problem_2/#problem-2","text":"","title":"Problem 2"},{"location":"1%20Physics/2%20Gravity/Problem_3/","text":"Problem 3","title":"Problem 3"},{"location":"1%20Physics/2%20Gravity/Problem_3/#problem-3","text":"","title":"Problem 3"},{"location":"1%20Physics/3%20Waves/Problem_1/","text":"Problem 1","title":"Problem 1"},{"location":"1%20Physics/3%20Waves/Problem_1/#problem-1","text":"","title":"Problem 1"},{"location":"1%20Physics/4%20Electromagnetism/Problem_1/","text":"Problem 1","title":"Problem 1"},{"location":"1%20Physics/4%20Electromagnetism/Problem_1/#problem-1","text":"","title":"Problem 1"},{"location":"1%20Physics/5%20Circuits/Problem_1/","text":"Problem 1","title":"Problem 1"},{"location":"1%20Physics/5%20Circuits/Problem_1/#problem-1","text":"","title":"Problem 1"},{"location":"1%20Physics/6%20Statistics/Problem_1/","text":"Problem 1","title":"Problem 1"},{"location":"1%20Physics/6%20Statistics/Problem_1/#problem-1","text":"","title":"Problem 1"},{"location":"1%20Physics/6%20Statistics/Problem_2/","text":"Problem 2","title":"Problem 2"},{"location":"1%20Physics/6%20Statistics/Problem_2/#problem-2","text":"","title":"Problem 2"},{"location":"1%20Physics/7%20Measurements/Problem_1/","text":"Problem 1","title":"Problem 1"},{"location":"1%20Physics/7%20Measurements/Problem_1/#problem-1","text":"","title":"Problem 1"},{"location":"2%20Mathematics/1%20Linear_algebra/","text":"Linear Algebra","title":"Linear Algebra"},{"location":"2%20Mathematics/1%20Linear_algebra/#linear-algebra","text":"","title":"Linear Algebra"},{"location":"2%20Mathematics/2%20Analytic_geometry/","text":"Analytic geometry","title":"Analytic geometry"},{"location":"2%20Mathematics/2%20Analytic_geometry/#analytic-geometry","text":"","title":"Analytic geometry"},{"location":"2%20Mathematics/3%20Calculus/","text":"Calculus","title":"Calculus"},{"location":"2%20Mathematics/3%20Calculus/#calculus","text":"","title":"Calculus"},{"location":"3%20Discret_Mathematics/1%20Set%20Theory%20and%20.../_02%20Set_Theory/","text":"Set Theory","title":"Set Theory"},{"location":"3%20Discret_Mathematics/1%20Set%20Theory%20and%20.../_02%20Set_Theory/#set-theory","text":"","title":"Set Theory"},{"location":"3%20Discret_Mathematics/1%20Set%20Theory%20and%20.../_03%20Relations/","text":"Relations","title":"Relations"},{"location":"3%20Discret_Mathematics/1%20Set%20Theory%20and%20.../_03%20Relations/#relations","text":"","title":"Relations"},{"location":"3%20Discret_Mathematics/1%20Set%20Theory%20and%20.../_04%20Functions/","text":"Functions","title":"Functions"},{"location":"3%20Discret_Mathematics/1%20Set%20Theory%20and%20.../_04%20Functions/#functions","text":"","title":"Functions"},{"location":"3%20Discret_Mathematics/2%20Number%20Theory%20and%20.../_05%20Combinatorics/","text":"Combinatorics","title":"Combinatorics"},{"location":"3%20Discret_Mathematics/2%20Number%20Theory%20and%20.../_05%20Combinatorics/#combinatorics","text":"","title":"Combinatorics"},{"location":"3%20Discret_Mathematics/2%20Number%20Theory%20and%20.../_08%20Number_Theory/","text":"Number Theory","title":"Number Theory"},{"location":"3%20Discret_Mathematics/2%20Number%20Theory%20and%20.../_08%20Number_Theory/#number-theory","text":"","title":"Number Theory"},{"location":"3%20Discret_Mathematics/3%20Recurrence%20and%20.../_06%20Sequences_and_Series/","text":"Sequences and Series","title":"Sequences and Series"},{"location":"3%20Discret_Mathematics/3%20Recurrence%20and%20.../_06%20Sequences_and_Series/#sequences-and-series","text":"","title":"Sequences and Series"},{"location":"3%20Discret_Mathematics/3%20Recurrence%20and%20.../_07%20Induction/","text":"Induction","title":"Induction"},{"location":"3%20Discret_Mathematics/3%20Recurrence%20and%20.../_07%20Induction/#induction","text":"","title":"Induction"},{"location":"3%20Discret_Mathematics/3%20Recurrence%20and%20.../_09%20Recurrence/","text":"Recurrence","title":"Recurrence"},{"location":"3%20Discret_Mathematics/3%20Recurrence%20and%20.../_09%20Recurrence/#recurrence","text":"","title":"Recurrence"},{"location":"3%20Discret_Mathematics/4%20Graph%20Theory%20and%20.../_10%20Graph_Theory/","text":"Graph Theory","title":"Graph Theory"},{"location":"3%20Discret_Mathematics/4%20Graph%20Theory%20and%20.../_10%20Graph_Theory/#graph-theory","text":"","title":"Graph Theory"},{"location":"3%20Discret_Mathematics/5%20Logic/_01%20Logic/","text":"Logic","title":"Logic"},{"location":"3%20Discret_Mathematics/5%20Logic/_01%20Logic/#logic","text":"","title":"Logic"}]}