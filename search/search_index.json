{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Introduction Technical setup Install Visual Studio Code from here Install folowing extensions in Visual Studio Code: Github Repositories (GitHub, Inc.) GitHub Copilot (GitHub Copilot) GitHub Actions (GitHub, Inc.) Python (Microsoft) Useful links Python Miniconda Documentation Google Colab How to use this repository Below are the steps you need to follow: Create a GitHub account if you don\u2019t have one. Fork this repository to your account. Enable the Issues tab: Go to the Settings tab and check the Issues option. Add your professor as a collaborator: Go to the Settings tab and add their GitHub username in the Collaborators section. Install python: Download Source Code & WWW GitHub repo WWW Where can I find the problems? Please visit the Mathematics Physics Lectures website. Physics Mathematics Discret Mathematics","title":"Introduction"},{"location":"#introduction","text":"","title":"Introduction"},{"location":"#technical-setup","text":"Install Visual Studio Code from here Install folowing extensions in Visual Studio Code: Github Repositories (GitHub, Inc.) GitHub Copilot (GitHub Copilot) GitHub Actions (GitHub, Inc.) Python (Microsoft)","title":"Technical setup"},{"location":"#useful-links","text":"Python Miniconda Documentation Google Colab","title":"Useful links"},{"location":"#how-to-use-this-repository","text":"Below are the steps you need to follow: Create a GitHub account if you don\u2019t have one. Fork this repository to your account. Enable the Issues tab: Go to the Settings tab and check the Issues option. Add your professor as a collaborator: Go to the Settings tab and add their GitHub username in the Collaborators section. Install python: Download Source Code & WWW GitHub repo WWW","title":"How to use this repository"},{"location":"#where-can-i-find-the-problems","text":"Please visit the Mathematics Physics Lectures website. Physics Mathematics Discret Mathematics","title":"Where can I find the problems?"},{"location":"1%20Physics/1%20Mechanics/Problem_1/","text":"Problem 1 import numpy as np import matplotlib.pyplot as plt Constants g = 9.81 # gravitational acceleration (m/s^2) v0 = 20 # initial velocity (m/s) angles = np.linspace(0, 90, num=100) # angles from 0 to 90 degrees Function to calculate range def projectile_range(v0, theta, g=9.81): theta_rad = np.radians(theta) return (v0**2 * np.sin(2 * theta_rad)) / g Compute range for each angle ranges = projectile_range(v0, angles) Plot range vs angle plt.figure(figsize=(8, 5)) plt.plot(angles, ranges, label=f'v0 = {v0} m/s', color='b') plt.xlabel(\"Angle of Projection (degrees)\") plt.ylabel(\"Range (m)\") plt.title(\"Projectile Range as a Function of Angle\") plt.legend() plt.grid() plt.show() Function to compute projectile motion trajectory def projectile_trajectory(v0, theta, g=9.81): theta_rad = np.radians(theta) t_flight = (2 * v0 * np.sin(theta_rad)) / g t = np.linspace(0, t_flight, num=100) x = v0 * np.cos(theta_rad) * t y = v0 * np.sin(theta_rad) * t - 0.5 * g * t**2 return x, y Plot projectile motion for a few angles plt.figure(figsize=(8, 5)) for theta in [15, 30, 45, 60, 75]: x, y = projectile_trajectory(v0, theta) plt.plot(x, y, label=f'{theta}\u00b0') plt.xlabel(\"Horizontal Distance (m)\") plt.ylabel(\"Vertical Distance (m)\") plt.title(\"Projectile Motion Trajectories\") plt.legend() plt.grid() plt.show() Discussion print(\"The maximum range occurs at 45 degrees, as expected from the analytical solution.\") IDK WHAT HAPPENED BUT I GUESS IT STARTED TO WORK??","title":"Problem 1"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#problem-1","text":"import numpy as np import matplotlib.pyplot as plt","title":"Problem 1"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#constants","text":"g = 9.81 # gravitational acceleration (m/s^2) v0 = 20 # initial velocity (m/s) angles = np.linspace(0, 90, num=100) # angles from 0 to 90 degrees","title":"Constants"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#function-to-calculate-range","text":"def projectile_range(v0, theta, g=9.81): theta_rad = np.radians(theta) return (v0**2 * np.sin(2 * theta_rad)) / g","title":"Function to calculate range"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#compute-range-for-each-angle","text":"ranges = projectile_range(v0, angles)","title":"Compute range for each angle"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#plot-range-vs-angle","text":"plt.figure(figsize=(8, 5)) plt.plot(angles, ranges, label=f'v0 = {v0} m/s', color='b') plt.xlabel(\"Angle of Projection (degrees)\") plt.ylabel(\"Range (m)\") plt.title(\"Projectile Range as a Function of Angle\") plt.legend() plt.grid() plt.show()","title":"Plot range vs angle"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#function-to-compute-projectile-motion-trajectory","text":"def projectile_trajectory(v0, theta, g=9.81): theta_rad = np.radians(theta) t_flight = (2 * v0 * np.sin(theta_rad)) / g t = np.linspace(0, t_flight, num=100) x = v0 * np.cos(theta_rad) * t y = v0 * np.sin(theta_rad) * t - 0.5 * g * t**2 return x, y","title":"Function to compute projectile motion trajectory"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#plot-projectile-motion-for-a-few-angles","text":"plt.figure(figsize=(8, 5)) for theta in [15, 30, 45, 60, 75]: x, y = projectile_trajectory(v0, theta) plt.plot(x, y, label=f'{theta}\u00b0') plt.xlabel(\"Horizontal Distance (m)\") plt.ylabel(\"Vertical Distance (m)\") plt.title(\"Projectile Motion Trajectories\") plt.legend() plt.grid() plt.show()","title":"Plot projectile motion for a few angles"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#discussion","text":"print(\"The maximum range occurs at 45 degrees, as expected from the analytical solution.\") IDK WHAT HAPPENED BUT I GUESS IT STARTED TO WORK??","title":"Discussion"},{"location":"1%20Physics/1%20Mechanics/Problem_2/","text":"Problem 2 Forced Damped Pendulum Simulation import numpy as np import matplotlib.pyplot as plt from scipy.integrate import solve_ivp Constants and Parameters g = 9.81 # gravitational acceleration (m/s^2) L = 1.0 # length of pendulum (m) b = 0.5 # damping coefficient A = 1.2 # driving force amplitude omega_d = 2.0 # driving frequency (rad/s) Time span t_span = (0, 50) t_eval = np.linspace(t_span[0], t_span[1], 10000) Initial conditions: [theta, omega] y0 = [0.2, 0.0] Differential equation for the forced damped pendulum def pendulum_ode(t, y): theta, omega = y dtheta_dt = omega domega_dt = -b * omega - (g / L) * np.sin(theta) + A * np.sin(omega_d * t) return [dtheta_dt, domega_dt] Solve ODE sol = solve_ivp(pendulum_ode, t_span, y0, t_eval=t_eval, method='RK45') Plot theta vs time plt.figure(figsize=(10, 5)) plt.plot(sol.t, sol.y[0]) plt.title('Forced Damped Pendulum: Angular Displacement vs Time') plt.xlabel('Time (s)') plt.ylabel('Theta (rad)') plt.grid(True) plt.show() Phase Portrait plt.figure(figsize=(6, 6)) plt.plot(sol.y[0], sol.y[1], lw=0.5) plt.title('Phase Portrait') plt.xlabel('Theta (rad)') plt.ylabel('Angular Velocity (rad/s)') plt.grid(True) plt.show() Poincar\u00e9 Section (stroboscopic map) t_poincare = np.arange(0, t_span[1], 2 * np.pi / omega_d) poincare_indices = [np.argmin(np.abs(sol.t - tp)) for tp in t_poincare if tp <= sol.t[-1]] theta_poincare = sol.y[0][poincare_indices] omega_poincare = sol.y[1][poincare_indices] plt.figure(figsize=(6, 6)) plt.scatter(theta_poincare, omegapoincare := omega_poincare, s=1) plt.title('Poincar\u00e9 Section') plt.xlabel('Theta (rad)') plt.ylabel('Angular Velocity (rad/s)') plt.grid(True) plt.show() Theory Section \"\"\" Theoretical Background: The forced damped pendulum is governed by the second-order nonlinear differential equation: \u03b8'' + b\u03b8' + (g/L)sin(\u03b8) = A sin(\u03c9_d t) Where: - b is the damping coefficient - A is the amplitude of the driving force - \u03c9_d is the driving frequency - g is gravitational acceleration - L is the length of the pendulum For small-angle approximation (\u03b8 \u2248 sin(\u03b8)), the equation simplifies to a linear differential equation: \u03b8'' + b\u03b8' + (g/L)\u03b8 = A sin(\u03c9_d t) This equation resembles a driven harmonic oscillator and exhibits resonance when the driving frequency is near the system's natural frequency \u221a(g/L). As parameters like A, b, and \u03c9_d vary, the system can show: - Periodic behavior - Quasiperiodic orbits - Chaotic dynamics Applications: - Suspension bridges under oscillatory load - Driven RLC electrical circuits - Human biomechanical gait modeling Limitations: - No consideration for noise or complex driving functions - Assumes point mass pendulum and ideal hinge Extensions: - Add noise terms or nonlinear damping - Study bifurcation diagrams for chaos threshold - Consider time-dependent damping or frequency \"\"\"","title":"Problem 2"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#problem-2","text":"","title":"Problem 2"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#forced-damped-pendulum-simulation","text":"import numpy as np import matplotlib.pyplot as plt from scipy.integrate import solve_ivp","title":"Forced Damped Pendulum Simulation"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#constants-and-parameters","text":"g = 9.81 # gravitational acceleration (m/s^2) L = 1.0 # length of pendulum (m) b = 0.5 # damping coefficient A = 1.2 # driving force amplitude omega_d = 2.0 # driving frequency (rad/s)","title":"Constants and Parameters"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#time-span","text":"t_span = (0, 50) t_eval = np.linspace(t_span[0], t_span[1], 10000)","title":"Time span"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#initial-conditions-theta-omega","text":"y0 = [0.2, 0.0]","title":"Initial conditions: [theta, omega]"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#differential-equation-for-the-forced-damped-pendulum","text":"def pendulum_ode(t, y): theta, omega = y dtheta_dt = omega domega_dt = -b * omega - (g / L) * np.sin(theta) + A * np.sin(omega_d * t) return [dtheta_dt, domega_dt]","title":"Differential equation for the forced damped pendulum"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#solve-ode","text":"sol = solve_ivp(pendulum_ode, t_span, y0, t_eval=t_eval, method='RK45')","title":"Solve ODE"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#plot-theta-vs-time","text":"plt.figure(figsize=(10, 5)) plt.plot(sol.t, sol.y[0]) plt.title('Forced Damped Pendulum: Angular Displacement vs Time') plt.xlabel('Time (s)') plt.ylabel('Theta (rad)') plt.grid(True) plt.show()","title":"Plot theta vs time"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#phase-portrait","text":"plt.figure(figsize=(6, 6)) plt.plot(sol.y[0], sol.y[1], lw=0.5) plt.title('Phase Portrait') plt.xlabel('Theta (rad)') plt.ylabel('Angular Velocity (rad/s)') plt.grid(True) plt.show()","title":"Phase Portrait"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#poincare-section-stroboscopic-map","text":"t_poincare = np.arange(0, t_span[1], 2 * np.pi / omega_d) poincare_indices = [np.argmin(np.abs(sol.t - tp)) for tp in t_poincare if tp <= sol.t[-1]] theta_poincare = sol.y[0][poincare_indices] omega_poincare = sol.y[1][poincare_indices] plt.figure(figsize=(6, 6)) plt.scatter(theta_poincare, omegapoincare := omega_poincare, s=1) plt.title('Poincar\u00e9 Section') plt.xlabel('Theta (rad)') plt.ylabel('Angular Velocity (rad/s)') plt.grid(True) plt.show()","title":"Poincar\u00e9 Section (stroboscopic map)"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#theory-section","text":"\"\"\" Theoretical Background: The forced damped pendulum is governed by the second-order nonlinear differential equation: \u03b8'' + b\u03b8' + (g/L)sin(\u03b8) = A sin(\u03c9_d t) Where: - b is the damping coefficient - A is the amplitude of the driving force - \u03c9_d is the driving frequency - g is gravitational acceleration - L is the length of the pendulum For small-angle approximation (\u03b8 \u2248 sin(\u03b8)), the equation simplifies to a linear differential equation: \u03b8'' + b\u03b8' + (g/L)\u03b8 = A sin(\u03c9_d t) This equation resembles a driven harmonic oscillator and exhibits resonance when the driving frequency is near the system's natural frequency \u221a(g/L). As parameters like A, b, and \u03c9_d vary, the system can show: - Periodic behavior - Quasiperiodic orbits - Chaotic dynamics Applications: - Suspension bridges under oscillatory load - Driven RLC electrical circuits - Human biomechanical gait modeling Limitations: - No consideration for noise or complex driving functions - Assumes point mass pendulum and ideal hinge Extensions: - Add noise terms or nonlinear damping - Study bifurcation diagrams for chaos threshold - Consider time-dependent damping or frequency \"\"\"","title":"Theory Section"},{"location":"1%20Physics/2%20Gravity/Problem_1/","text":"Problem 1","title":"Problem 1"},{"location":"1%20Physics/2%20Gravity/Problem_1/#problem-1","text":"","title":"Problem 1"},{"location":"1%20Physics/2%20Gravity/Problem_2/","text":"Problem 2","title":"Problem 2"},{"location":"1%20Physics/2%20Gravity/Problem_2/#problem-2","text":"","title":"Problem 2"},{"location":"1%20Physics/2%20Gravity/Problem_3/","text":"Problem 3","title":"Problem 3"},{"location":"1%20Physics/2%20Gravity/Problem_3/#problem-3","text":"","title":"Problem 3"},{"location":"1%20Physics/3%20Waves/Problem_1/","text":"Problem 1","title":"Problem 1"},{"location":"1%20Physics/3%20Waves/Problem_1/#problem-1","text":"","title":"Problem 1"},{"location":"1%20Physics/4%20Electromagnetism/Problem_1/","text":"Problem 1","title":"Problem 1"},{"location":"1%20Physics/4%20Electromagnetism/Problem_1/#problem-1","text":"","title":"Problem 1"},{"location":"1%20Physics/5%20Circuits/Problem_1/","text":"Problem 1","title":"Problem 1"},{"location":"1%20Physics/5%20Circuits/Problem_1/#problem-1","text":"","title":"Problem 1"},{"location":"1%20Physics/6%20Statistics/Problem_1/","text":"Problem 1","title":"Problem 1"},{"location":"1%20Physics/6%20Statistics/Problem_1/#problem-1","text":"","title":"Problem 1"},{"location":"1%20Physics/6%20Statistics/Problem_2/","text":"Problem 2","title":"Problem 2"},{"location":"1%20Physics/6%20Statistics/Problem_2/#problem-2","text":"","title":"Problem 2"},{"location":"1%20Physics/7%20Measurements/Problem_1/","text":"Problem 1","title":"Problem 1"},{"location":"1%20Physics/7%20Measurements/Problem_1/#problem-1","text":"","title":"Problem 1"},{"location":"2%20Mathematics/1%20Linear_algebra/","text":"Linear Algebra","title":"Linear Algebra"},{"location":"2%20Mathematics/1%20Linear_algebra/#linear-algebra","text":"","title":"Linear Algebra"},{"location":"2%20Mathematics/2%20Analytic_geometry/","text":"Analytic geometry","title":"Analytic geometry"},{"location":"2%20Mathematics/2%20Analytic_geometry/#analytic-geometry","text":"","title":"Analytic geometry"},{"location":"2%20Mathematics/3%20Calculus/","text":"Calculus","title":"Calculus"},{"location":"2%20Mathematics/3%20Calculus/#calculus","text":"","title":"Calculus"},{"location":"3%20Discret_Mathematics/1%20Set%20Theory%20and%20.../_02%20Set_Theory/","text":"Set Theory","title":"Set Theory"},{"location":"3%20Discret_Mathematics/1%20Set%20Theory%20and%20.../_02%20Set_Theory/#set-theory","text":"","title":"Set Theory"},{"location":"3%20Discret_Mathematics/1%20Set%20Theory%20and%20.../_03%20Relations/","text":"Relations","title":"Relations"},{"location":"3%20Discret_Mathematics/1%20Set%20Theory%20and%20.../_03%20Relations/#relations","text":"","title":"Relations"},{"location":"3%20Discret_Mathematics/1%20Set%20Theory%20and%20.../_04%20Functions/","text":"Functions","title":"Functions"},{"location":"3%20Discret_Mathematics/1%20Set%20Theory%20and%20.../_04%20Functions/#functions","text":"","title":"Functions"},{"location":"3%20Discret_Mathematics/2%20Number%20Theory%20and%20.../_05%20Combinatorics/","text":"Combinatorics","title":"Combinatorics"},{"location":"3%20Discret_Mathematics/2%20Number%20Theory%20and%20.../_05%20Combinatorics/#combinatorics","text":"","title":"Combinatorics"},{"location":"3%20Discret_Mathematics/2%20Number%20Theory%20and%20.../_08%20Number_Theory/","text":"Number Theory","title":"Number Theory"},{"location":"3%20Discret_Mathematics/2%20Number%20Theory%20and%20.../_08%20Number_Theory/#number-theory","text":"","title":"Number Theory"},{"location":"3%20Discret_Mathematics/3%20Recurrence%20and%20.../_06%20Sequences_and_Series/","text":"Sequences and Series","title":"Sequences and Series"},{"location":"3%20Discret_Mathematics/3%20Recurrence%20and%20.../_06%20Sequences_and_Series/#sequences-and-series","text":"","title":"Sequences and Series"},{"location":"3%20Discret_Mathematics/3%20Recurrence%20and%20.../_07%20Induction/","text":"Induction","title":"Induction"},{"location":"3%20Discret_Mathematics/3%20Recurrence%20and%20.../_07%20Induction/#induction","text":"","title":"Induction"},{"location":"3%20Discret_Mathematics/3%20Recurrence%20and%20.../_09%20Recurrence/","text":"Recurrence","title":"Recurrence"},{"location":"3%20Discret_Mathematics/3%20Recurrence%20and%20.../_09%20Recurrence/#recurrence","text":"","title":"Recurrence"},{"location":"3%20Discret_Mathematics/4%20Graph%20Theory%20and%20.../_10%20Graph_Theory/","text":"Graph Theory","title":"Graph Theory"},{"location":"3%20Discret_Mathematics/4%20Graph%20Theory%20and%20.../_10%20Graph_Theory/#graph-theory","text":"","title":"Graph Theory"},{"location":"3%20Discret_Mathematics/5%20Logic/_01%20Logic/","text":"Logic","title":"Logic"},{"location":"3%20Discret_Mathematics/5%20Logic/_01%20Logic/#logic","text":"","title":"Logic"}]}